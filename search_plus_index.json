{"./":{"url":"./","title":"序言","keywords":"","body":"GitBook Tutorial GitBook是什么？在Gitbook的Github上的介绍： Modern documentation format and toolchain using Git and Markdown. GitBook is a command line tool (and Node.js library)for building beautiful books using GitHub/Git and Markdown (or AsciiDoc). 上面两段引文中都明确提到一个关键词tool,因此，Gitbook首先就是一个工具。它基于Nodejs的命令工具,可以结合使用GitHub/Git和Markdown语法来快速的制作一套精美的电子书或文档集。 GitBook支持多种文档格式的输出： PDF：需要Gitbook-PDF 插件的支持； JSON：用于电子书的调式或元数据提取； eBook：需要ebook-convert支持； HTML: 支持单页面的html； Static WebSite：默认输出格式，可托管Github pages上。 legacy.gitbook.com是创建和托管电子书的平台，可多人协作，提供在线编辑器。 作为一款开源的在线文档创作项目，不仅有免费的空间使用，当然更多的是面向企业或是收费的群体提供服务，但对于我们个人总结文档的需求是完全足够的。同类产品还有看云，Read the Docs,大家可以去比对一下，所谓适合自己的才是最好的，可根据自己的喜好选择。 作为学习实战案列，我把Gitbook的学习总结整理成一本电子书，分享给大家，欢迎多多批评指正！ 项目地址 Project GitHub：https://github.com/dishuihengxin/gitbook-tutorial 在线阅读电子书：https://kalid.io/gitbook-tutorial Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "},"install/":{"url":"install/","title":"安装调式","keywords":"","body":"Gitbook的安装 工欲善其事，必先利其器。 我们想体验和是使用Gitbook来整理文档，就必须要准备好Gitbook这个工具。使用Gitbook有三种方式，最简单的一种就是直接在https://legacy.gitbook.com上去创作文档；另一种就是本地安装Gitbook工具，很方便在本地进行创作和调式；第三种就是使用Gitbook提供的Gitbook Editor。 官方也给出了安装Gitbook的系统要求： Nodejs V4.0.0+ Windows，Mac，Linux都支持 我这里的基础环境：(后面的文档均基于此来整理) Windows 10 Node 8.11.4 npm 6.4.0 Gitbook 3.2.3 Gitbook CLI 2.3.2 Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "},"install/nodejs.html":{"url":"install/nodejs.html","title":"Nodejs的安装","keywords":"","body":"Nodejs的安装 因为Gitbook是基于nodejs环境来运行的，所以先准备Nodejs的基础环境，从Nodejs官网下载地址https://nodejs.org/en/download/下载适合的版本即可,这里选择当前最新的8.11.4 TLS版本。 在电脑安装之后，用命令行验证Nodejs的版本： C:\\Users\\kalid>node -v v8.11.4 Nodejs已经集成npm的安装，npm版本如下： C:\\Users\\kalid>npm -v 6.4.0 OK了，Nodejs基础环境已经安装完成了。 Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "},"install/gitbook.html":{"url":"install/gitbook.html","title":"GitBook的安装","keywords":"","body":"GitBook的安装 为了能在任何目录下使用Gitbook-Cli，我们需要进行全局安装Gitbook,最佳方案就是直接使用npm来安装： npm install -g gitbook-cli GitBook官方给出的安装文档：Setup and Installation of Gitook 使用命令行查看当前的Gitbook版本信息： C:\\Users\\kalid>gitbook -V CLI version: 2.3.2 GitBook version: 3.2.3 ok,Gitbook已经安装完成。 Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "},"install/gitbookcli.html":{"url":"install/gitbookcli.html","title":"GitBook Cli使用","keywords":"","body":"Gitbook cli 初体验 Gitbook已经在电脑上安装好了，先熟悉一下Gitbook cli的命令，以便更好的使用Gitbook进行创作，其实Gitbook的操作命令很简单。 1. 创建一本书 准备好电子书文件路径：D:\\gitbook\\gitbook-tutorial D:\\gitbook\\gitbook-tutorial>gitbook init warn: no summary file in this book info: create README.md info: create SUMMARY.md info: initialization is finished 执行后会在当前目录下生成README.md和SUMMARY.md文件，其中README.md为电子书的介绍部分，SUMMARY.md是整本电子书的目录结构文件。 如果希望电子书创建到指定目录中，可以运行以下命令： gitbook init ./directory 2. 预览模式 D:\\gitbook\\gitbook-tutorial>gitbook serve Live reload server started on port: 35729 Press CTRL+C to quit ... info: 7 plugins are installed info: loading plugin \"livereload\"... OK info: loading plugin \"highlight\"... OK info: loading plugin \"search\"... OK info: loading plugin \"lunr\"... OK info: loading plugin \"sharing\"... OK info: loading plugin \"fontsettings\"... OK info: loading plugin \"theme-default\"... OK info: found 1 pages info: found 7 asset files info: >> generation finished with success in 1.1s ! Starting server ... Serving book on http://localhost:4000 执行后默认会自动安装7个插件，浏览器访问http://localhost:4000就可以浏览制作好的电子书了，这很方便让我们去预览或是调式电子书。 3. 构建静态文件 当电子书或文档制作完成后，仅需要执行下面这条命令就可以很快速的生成HTML单页面格式的页面，并自动将编译后的HTML单页面存放在_book目录下。 gitbook build 单单是这种方式的话，仅仅是生成了一个个对应的单页面文件，还不能自由的切换，所以我们还是将电子书推到Gitbook或是Github上。 4. 调式模式 为了更好的预览和调式电子书，需要开启debug功能来实现，使用以下命令： gitbook build ./ --log=debug --debug 有时候需要不同版本来预览测试电子书，借助Gitbook远程不同版本来实现，查看远程可供版本： gitbook ls-remote 目前所有可用版本： > D:\\gitbook\\gitbook-tutorial>gitbook ls-remote Available GitBook Versions: > 4.0.0-alpha.6, 4.0.0-alpha.5, 4.0.0-alpha.4, 4.0.0-alpha.3, 4.0.0-alpha.2, 4.0.0-alpha.1, 3.2.3, 3.2.2, 3.2.1, 3.2.0, 3.2.0-pre.1, 3.2.0-pre.0, 3.1.1, 3.1.0, 3.0.3, 3.0.2, 3.0.1, 3.0.0, 3.0.0-pre.15, 3.0.0-pre.14, 3.0.0-pre.13, 3.0.0-pre.12, 3.0.0-pre.11, 3.0.0-pre.10, 3.0.0-pre.9, 3.0.0-pre.8, 3.0.0-pre.7, 3.0.0-pre.6, 3.0.0-pre.5, 3.0.0-pre.4, 3.0.0-pre.3, 3.0.0-pre.2, 3.0.0-pre.1, 2.6.7, 2.6.6, 2.6.5, 2.6.4, 2.6.3, 2.6.2, 2.6.1, 2.6.0, 2.5.2, 2.5.1, 2.5.0, 2.5.0-beta.7, 2.5.0-beta.6, 2.5.0-beta.5, 2.5.0-beta.4, 2.5.0-beta.3, 2.5.0-beta.2, 2.5.0-beta.1, 2.4.3, 2.4.2, 2.4.1, 2.4.0, 2.3.3, 2.3.2, 2.3.1, 2.3.0, 2.2.0, 2.1.0, 2.0.4, 2.0.3, 2.0.2, 2.0.1, 2.0.0, 2.0.0-beta.5, 2.0.0-beta.4, 2.0.0-beta.3, 2.0.0-beta.2, 2.0.0-beta.1, 2.0.0-alpha.9, 2.0.0-alpha.8, 2.0.0-alpha.7, 2.0.0-alpha.6, 2.0.0-alpha.5, 2.0.0-alpha.4, 2.0.0-alpha.3, 2.0.0-alpha.2, 2.0.0-alpha.1 > Tags: > latest : 3.2.3 pre : 4.0.0-alpha.6 安装指定版本： gitbook fetch 3.2.3 好了，马上进入超级打怪模式，Go...... Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "},"base/":{"url":"base/","title":"GitBook基础知识","keywords":"","body":"Gitbook的基础知识 基础环境都已经准备就绪了，下面就要深入学习一些进阶的知识了。当熟悉Gitbook的使用后，你会爱上这种简单的工具的。 Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "},"base/directoty.html":{"url":"base/directoty.html","title":"目录结构解析","keywords":"","body":"Gitbook 目录结构解析 1. 文件结构 基本结构(初始化) - |--- README.md # Book instruction |--- SUMMARY.md # Article directory 复制结构(多章节) - |--- README.md # Book instruction |--- SUMMARY.md # Article directory |--- book.json # Book config file |--- GLOSSARY.md # Glossary list |--- Chapter1 # Book Chapter 1 | |--- demo1.md # article-1 in chapter | |--- demo2.md # article-1 in chapter |--- Chapter2 # Book Chapter 1 |--- demo3.md # article-1 in chapter |--- demo4.md # article-1 in chapter .... 2. 目录结构定义 Gitbook的目录都由SUMMARY.md链接列表来定义，链接的标题作为电子书章节标题，链接的目标是该章节文件的路径。 简单例子： # Summary * [Part I](part1/README.md) * [Writing is nice](part1/writing.md) * [GitBook is nice](part1/gitbook.md) * [Part II](part2/README.md) * [We love feedback](part2/feedback_please.md) * [Better tools for authors](part2/better_tools.md) 带锚点的目录结构： # Summary ### Part I * [Part I](part1/README.md) * [Writing is nice](part1/README.md#writing) * [GitBook is nice](part1/README.md#gitbook) * [Part II](part2/README.md) * [We love feedback](part2/README.md#feedback) * [Better tools for authors](part2/README.md#tools) 3. 静态资源 Gitbook使用简单的目录结构，对于一些未在SUMMARY.md中定义使用的静态资源都将被同步到输出中，除非配置了忽略文件。 Gitbook首先都会检索.*ignore文件是否存在，根据.gitignore、.bookignore、.ignore文件来选择是否忽略哪些文件或文件夹。熟悉Git的同学一定不陌生，.ignore遵循一定的格式： # Ignore single file，example： demo.md demo.md # Ignore in the some directory，example： node_module/ node_module # Ignore everything in the directory,example: _book/ _book/* # Ignore matching keywords,example: demo/ demo1.md demo.txt demo* 4. 工程项目附加的电子书 对于一个项目，如果我们想增加一个document文档说明书，Gitbook也提供了一个解决方案，root指定入口文件路径。 . ├── book.json └── docs/ ├── README.md └── SUMMARY.md 只需要在book.json中定义好Gitbook的入口路径即可：(注意是json格式) { \"root\": \"./docs\" } Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "},"base/diy-style.html":{"url":"base/diy-style.html","title":"自定义配置","keywords":"","body":"book.json 配置说明 该文件是Gitbook主要的自定义配置文件，可以设定电子书名，作者信息，主题风格，插件等等。下面给出一个完整的book.json配置例子： { \"title\": \"Gitbook Handbook - Gitbook学习总结 by kalid\", \"description\": \"Gitbook Handbook - 记录了本人学习使用Gitbook的心路历程，同时也希望可以帮助到有需要的同学，共同进步！\", \"language\": \"zh-hans\", \"author\": \"kalid\", \"links\":{ \"sidebar\":{ \"Kalid's Blog\": \"https://kalid.io\" } }, \"plugins\": [ \"codesnippet\", \"splitter\", \"page-toc-button\", \"image-captions\", \"back-to-top-button\", \"-lunr\", \"-search\", \"search-plus\", \"favicon@^0.0.2\", \"tbfed-pagefooter@^0.0.1\", \"theme-default\" ], \"pluginsConfig\": { \"theme-default\": { \"showLevel\": true }, \"image-captions\": { \"caption\": \"图片 - _CAPTION_\" }, \"tbfed-pagefooter\": { \"copyright\": \"Copyright © kalid.io 2018\", \"modify_label\": \"Updated:\", \"modify_format\": \"YYYY-MM-DD HH:mm:ss\" }, \"favicon\": { \"shortcut\": \"favicon.ico\", \"bookmark\": \"favicon.ico\" } } } 大家可以根据自己的需求来设置book.json内容。 官方给出的配置参考文档：https://toolchain.gitbook.com/config.html Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "},"base/cover.html":{"url":"base/cover.html","title":"封面定制","keywords":"","body":"Gitbook 封面设计 制作完电子书，我们肯定是想有一个精美的封面的。 Gitbook的封面可以由auto cover插件来生成，当然可以自己自定义设计。封面模板命名为：cover.jpg，封面缩略图命名为：cover_small.jpg，并且只为JPG格式。 所以呢，封面尽情的自定义吧。 Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "},"advanced/":{"url":"advanced/","title":"Gitbook进阶使用","keywords":"","body":"Gitbook的进阶使用 Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "},"advanced/theme.html":{"url":"advanced/theme.html","title":"定制主题","keywords":"","body":"定制Gitbook的主题 Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "},"advanced/plugins.html":{"url":"advanced/plugins.html","title":"安装插件","keywords":"","body":"Gitbook插件的安装 Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "},"advanced/template.html":{"url":"advanced/template.html","title":"定制模板","keywords":"","body":"定制Gitbook模板 Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "},"release/":{"url":"release/","title":"Gitbook的发布","keywords":"","body":"Gitbook的发布 Copyright © kalid.io 2018 all right reserved，powered by GitbookUpdated: 2018-09-07 00:52:06 "}}